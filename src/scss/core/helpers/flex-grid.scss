// Flex
.iflex {
  display: inline-flex;
}

.flex {
  display: flex;
}

.f {
  // Wrap
  &w {
    flex-wrap: wrap;
  }

  // Direction
  &d {
    &-c {
      flex-direction: column;
    }

    &-r {
      flex-direction: row;
    }
  }

  // Fill
  &-auto {
    flex: auto;
  }

  &-1 {
    flex: 1;
  }
}

// Grid
.igrid {
  display: inline-grid;
}

.grid {
  display: grid;
}

.gtc {
  // Static
  &-auto-1 {
    grid-template-columns: auto 1fr;
  }

  &-auto-1-auto {
    grid-template-columns: auto 1fr auto;
  }

  &-1-auto {
    grid-template-columns: 1fr auto;
  }

  &-auto-250 {
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
  }

  // Dynamic
  @for $i from 2 through 5 {
    &-#{$i} {
      grid-template-columns: repeat(($i), 1fr);
    }
  }
}

.gtr {
  &-auto-1 {
    grid-template-rows: auto 1fr;
  }

  &-auto-1-auto {
    grid-template-rows: auto 1fr auto;
  }

  &-1-auto {
    grid-template-rows: 1fr auto;
  }
}

// Gaps
.ggap {
  &-5 {
    grid-gap: 5px;
  }
  
  &-15 {
    grid-gap: 15px;
  }

  &-10-20 {
    grid-gap: 10px 20px;
  }

  @for $i from 1 through 5 {
    &-#{10 * $i} {
      grid-gap: 10px * $i;
    }
  }
}

// Align item
.ai {
  &-fs {
    align-items: flex-start;
  }

  &-c {
    align-items: center;
  }

  &-fe {
    align-items: flex-end;
  }
}

// Align self
.as {
  &-fs {
    align-self: flex-start;
  }

  &-c {
    align-self: center;
  }

  &-fe {
    align-self: flex-end;
  }
}

// Justify content
.jc {
  &-fs {
    justify-content: flex-start;
  }

  &-c {
    justify-content: center;
  }

  &-sb {
    justify-content: space-between;
  }

  &-fe {
    justify-content: flex-end;
  }
}

// Justify self
.js {
  &-fs {
    justify-self: flex-start;
  }

  &-c {
    justify-self: center;
  }

  &-sb {
    justify-self: space-between;
  }

  &-fe {
    justify-self: flex-end;
  }
}